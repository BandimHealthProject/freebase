diff --git a/app/assets/js/bundle.js b/app/assets/js/bundle.js
--- a/app/assets/js/bundle.js
+++ b/app/assets/js/bundle.js
@@ -10654,7 +10654,7 @@
 }));
 
 },{}],"jgiFollow":[function(require,module,exports){
-/* global alert, confirm */
+/* global confirm */
 'use strict';
 
 /**
@@ -11687,31 +11687,10 @@
         window.alert('unrecognized closest value from ui: ' + valueFromUi);
     }
 
-    // We're using this as a makeshift radio button, so handle that ourselves
-    // by deselecting and writing to the db the currently closest chimp.
-    
-    // First deselect the existing closest chimp and write.
-    var $closestChimp = $('.closeness[__data=1]');
-    if ($closestChimp.length > 1) {
-      alert('More than one chimp marked as closest!');
-    } else if ($closestChimp.length === 0) {
-      // Nothing to do.
-      console.log('no closest chimp selected already');
-    } else {
-      var closestIdElement = $closestChimp.prop('id');
-      var indexOfClosestSuffix = closestIdElement.indexOf('_close');
-      var closestChimpId = closestIdElement.substring(0, indexOfClosestSuffix);
-      var closestChimp = exports.getChimpFromUi(closestChimpId);
-      closestChimp.closest = closestLabels.no;
-      db.writeRowForChimp(control, closestChimp, true);
-      exports.updateUiForChimp(closestChimp);
-    }
-
     // Then handle the existing chimp.
     var chimp = exports.getSelectedChimp();
     assertFoundChimp(chimp);
     chimp.closest = valueForDb;
-
     
     exports.updateUiForChimp(chimp);
     db.writeRowForChimp(control, chimp, true);
diff --git a/app/assets/js/jgiFollow.js b/app/assets/js/jgiFollow.js
--- a/app/assets/js/jgiFollow.js
+++ b/app/assets/js/jgiFollow.js
@@ -1,4 +1,4 @@
-/* global alert, confirm */
+/* global confirm */
 'use strict';
 
 /**
@@ -1031,31 +1031,10 @@
         window.alert('unrecognized closest value from ui: ' + valueFromUi);
     }
 
-    // We're using this as a makeshift radio button, so handle that ourselves
-    // by deselecting and writing to the db the currently closest chimp.
-    
-    // First deselect the existing closest chimp and write.
-    var $closestChimp = $('.closeness[__data=1]');
-    if ($closestChimp.length > 1) {
-      alert('More than one chimp marked as closest!');
-    } else if ($closestChimp.length === 0) {
-      // Nothing to do.
-      console.log('no closest chimp selected already');
-    } else {
-      var closestIdElement = $closestChimp.prop('id');
-      var indexOfClosestSuffix = closestIdElement.indexOf('_close');
-      var closestChimpId = closestIdElement.substring(0, indexOfClosestSuffix);
-      var closestChimp = exports.getChimpFromUi(closestChimpId);
-      closestChimp.closest = closestLabels.no;
-      db.writeRowForChimp(control, closestChimp, true);
-      exports.updateUiForChimp(closestChimp);
-    }
-
     // Then handle the existing chimp.
     var chimp = exports.getSelectedChimp();
     assertFoundChimp(chimp);
     chimp.closest = valueForDb;
-
     
     exports.updateUiForChimp(chimp);
     db.writeRowForChimp(control, chimp, true);
