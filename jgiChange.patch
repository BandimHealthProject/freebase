diff --git a/app/assets/js/bundle.js b/app/assets/js/bundle.js
--- a/app/assets/js/bundle.js
+++ b/app/assets/js/bundle.js
@@ -10691,6 +10691,26 @@
 
 var FLAG_PLACE_HOLDER_TIME = 'hh:mm';
 
+
+/**
+ * We have to store the actual number of the species in the db as integers, but
+ * we want to represent ranges.
+ */
+var speciesNumberLabelsUser = {
+  '1': '1',
+  '2': '2-9',
+  '10': '10-19',
+  '20': '20+'
+};
+
+
+/**
+ * Get the user-facing label for a given db-safe species number.
+ */
+function getSpeciesNumberUserLabel(dbNumber) {
+  return speciesNumberLabelsUser[dbNumber];
+}
+
 function assertIsChimp(chimp) {
   if (chimp.constructor.name !== 'Chimp') {
     throw new Error('parameter must be a chimp');
@@ -10939,7 +10959,11 @@
     var option = $('<option></option>');
     option.attr('value', species.speciesName);
     option.addClass('dynamic');
-    option.text(species.number + ' ' + species.speciesName);
+    option.text(
+      getSpeciesNumberUserLabel(species.number) +
+      ' ' +
+      species.speciesName
+    );
 
     option.attr('__rowid', species.rowId);
     option.attr('__date', species.date);
@@ -11108,7 +11132,7 @@
   $sumName.attr('__data', species.speciesName);
   $editName.val(species.speciesName);
 
-  $sumNumber.text(species.number);
+  $sumNumber.text(getSpeciesNumberUserLabel(species.number));
   $sumNumber.attr('__data', species.number);
   $editPart.val(species.number);
 
@@ -11965,7 +11989,7 @@
 
     if (speciesNumber !== '0') {
       // 0 is the default, illegal, unselectable value
-      $speciesSummaryNumber.text(speciesNumber);
+      $speciesSummaryNumber.text(getSpeciesNumberUserLabel(speciesNumber));
       $speciesSummaryNumber.attr('__data', speciesNumber);
     } else {
       $speciesSummaryNumber.text('?');
diff --git a/app/assets/js/jgiFollow.js b/app/assets/js/jgiFollow.js
--- a/app/assets/js/jgiFollow.js
+++ b/app/assets/js/jgiFollow.js
@@ -14,6 +14,26 @@
 
 var FLAG_PLACE_HOLDER_TIME = 'hh:mm';
 
+
+/**
+ * We have to store the actual number of the species in the db as integers, but
+ * we want to represent ranges.
+ */
+var speciesNumberLabelsUser = {
+  '1': '1',
+  '2': '2-9',
+  '10': '10-19',
+  '20': '20+'
+};
+
+
+/**
+ * Get the user-facing label for a given db-safe species number.
+ */
+function getSpeciesNumberUserLabel(dbNumber) {
+  return speciesNumberLabelsUser[dbNumber];
+}
+
 function assertIsChimp(chimp) {
   if (chimp.constructor.name !== 'Chimp') {
     throw new Error('parameter must be a chimp');
@@ -262,7 +282,11 @@
     var option = $('<option></option>');
     option.attr('value', species.speciesName);
     option.addClass('dynamic');
-    option.text(species.number + ' ' + species.speciesName);
+    option.text(
+      getSpeciesNumberUserLabel(species.number) +
+      ' ' +
+      species.speciesName
+    );
 
     option.attr('__rowid', species.rowId);
     option.attr('__date', species.date);
@@ -431,7 +455,7 @@
   $sumName.attr('__data', species.speciesName);
   $editName.val(species.speciesName);
 
-  $sumNumber.text(species.number);
+  $sumNumber.text(getSpeciesNumberUserLabel(species.number));
   $sumNumber.attr('__data', species.number);
   $editPart.val(species.number);
 
@@ -1288,7 +1312,7 @@
 
     if (speciesNumber !== '0') {
       // 0 is the default, illegal, unselectable value
-      $speciesSummaryNumber.text(speciesNumber);
+      $speciesSummaryNumber.text(getSpeciesNumberUserLabel(speciesNumber));
       $speciesSummaryNumber.attr('__data', speciesNumber);
     } else {
       $speciesSummaryNumber.text('?');
