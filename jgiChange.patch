diff --git a/app/assets/js/bundle.js b/app/assets/js/bundle.js
--- a/app/assets/js/bundle.js
+++ b/app/assets/js/bundle.js
@@ -1297,41 +1297,39 @@
 
   var prefix = dbTime.substring(0, dashIndex);
   var hour = dbTime.substring(dashIndex + 1, colonIndex);
+  var mins = dbTime.substring(colonIndex + 1, colonIndex + 3);
   // Everything at the end.
   var period = dbTime.substring(colonIndex + 3);
 
-  // Keeping these as arrays is kind of lazy, but it is foolproof until we
-  // change the intervals.
-  var minutes = [
-    '00',
-    '01',
-    '02',
-    '03',
-    '04',
-    '05',
-    '06',
-    '07',
-    '08',
-    '09',
-    '10',
-    '11',
-    '12',
-    '13',
-    '14'
-  ];
-
   var result = [];
 
-  minutes.forEach(function(val) {
-    var newUserTime = hour + ':' + val + period;
-    var newPrefix = prefix + '.' + val;
+  for (var i = 0; i < 15; i++) {
+    var minsNum = Number(mins);
+    minsNum += i;
+    
+    var newMins;
+    if (minsNum < 10) {
+      newMins = '0' + String(minsNum);
+    } else {
+      newMins = String(minsNum);
+    }
+
+    var suffix;
+    if (i < 10) {
+      suffix = '0' + String(i);
+    } else {
+      suffix = String(i);
+    }
+
+    var newUserTime = hour + ':' + newMins + period;
+    var newPrefix = prefix + '.' + suffix;
     var newDbTime = newPrefix + '-' + newUserTime;
 
     var timePoint = {};
     timePoint.dbTime = newDbTime;
     timePoint.userTime = newUserTime;
     result.push(timePoint);
-  });
+  }
 
   return result;
 };
diff --git a/app/assets/js/jgiUtil.js b/app/assets/js/jgiUtil.js
--- a/app/assets/js/jgiUtil.js
+++ b/app/assets/js/jgiUtil.js
@@ -188,41 +188,39 @@
 
   var prefix = dbTime.substring(0, dashIndex);
   var hour = dbTime.substring(dashIndex + 1, colonIndex);
+  var mins = dbTime.substring(colonIndex + 1, colonIndex + 3);
   // Everything at the end.
   var period = dbTime.substring(colonIndex + 3);
 
-  // Keeping these as arrays is kind of lazy, but it is foolproof until we
-  // change the intervals.
-  var minutes = [
-    '00',
-    '01',
-    '02',
-    '03',
-    '04',
-    '05',
-    '06',
-    '07',
-    '08',
-    '09',
-    '10',
-    '11',
-    '12',
-    '13',
-    '14'
-  ];
-
   var result = [];
 
-  minutes.forEach(function(val) {
-    var newUserTime = hour + ':' + val + period;
-    var newPrefix = prefix + '.' + val;
+  for (var i = 0; i < 15; i++) {
+    var minsNum = Number(mins);
+    minsNum += i;
+    
+    var newMins;
+    if (minsNum < 10) {
+      newMins = '0' + String(minsNum);
+    } else {
+      newMins = String(minsNum);
+    }
+
+    var suffix;
+    if (i < 10) {
+      suffix = '0' + String(i);
+    } else {
+      suffix = String(i);
+    }
+
+    var newUserTime = hour + ':' + newMins + period;
+    var newPrefix = prefix + '.' + suffix;
     var newDbTime = newPrefix + '-' + newUserTime;
 
     var timePoint = {};
     timePoint.dbTime = newDbTime;
     timePoint.userTime = newUserTime;
     result.push(timePoint);
-  });
+  }
 
   return result;
 };
diff --git a/app/assets/js/jgiUtilTest.js b/app/assets/js/jgiUtilTest.js
--- a/app/assets/js/jgiUtilTest.js
+++ b/app/assets/js/jgiUtilTest.js
@@ -15,85 +15,35 @@
 });
 
 
-test('incrementTime 00:00', function(t) {
+function getTimePointObj(dbTime, userTime) {
+  var result = {};
+  result.dbTime = dbTime;
+  result.userTime = userTime;
+  return result;
+}
+
+test('getDbAndUserTimesInInterval 14-12:30J', function(t) {
   t.plan(1);
 
-  var actual = util.incrementTime('00:00');
-  t.equal(actual, '00:15');
+  var actual = util.getDbAndUserTimesInInterval('14-12:30J');
 
+  var target = [];
+  target.push(getTimePointObj('14.00-12:30J', '12:30J'));
+  target.push(getTimePointObj('14.01-12:31J', '12:31J'));
+  target.push(getTimePointObj('14.02-12:32J', '12:32J'));
+  target.push(getTimePointObj('14.03-12:33J', '12:33J'));
+  target.push(getTimePointObj('14.04-12:34J', '12:34J'));
+  target.push(getTimePointObj('14.05-12:35J', '12:35J'));
+  target.push(getTimePointObj('14.06-12:36J', '12:36J'));
+  target.push(getTimePointObj('14.07-12:37J', '12:37J'));
+  target.push(getTimePointObj('14.08-12:38J', '12:38J'));
+  target.push(getTimePointObj('14.09-12:39J', '12:39J'));
+  target.push(getTimePointObj('14.10-12:40J', '12:40J'));
+  target.push(getTimePointObj('14.11-12:41J', '12:41J'));
+  target.push(getTimePointObj('14.12-12:42J', '12:42J'));
+  target.push(getTimePointObj('14.13-12:43J', '12:43J'));
+  target.push(getTimePointObj('14.14-12:44J', '12:44J'));
+    
+  t.deepEqual(actual, target);
 });
 
-
-test('incrementTime 00:15', function(t) {
-  t.plan(1);
-
-  var actual = util.incrementTime('00:15');
-  t.equal(actual, '00:30');
-
-});
-
-
-test('incrementTime 00:30', function(t) {
-  t.plan(1);
-
-  var actual = util.incrementTime('00:30');
-  t.equal(actual, '00:45');
-
-});
-
-
-test('incrementTime 00:45', function(t) {
-  t.plan(1);
-
-  var actual = util.incrementTime('00:45');
-  t.equal(actual, '01:00');
-
-});
-
-
-test('incrementTime 09:45', function(t) {
-  t.plan(1);
-
-  var actual = util.incrementTime('09:45');
-  t.equal(actual, '10:00');
-});
-
-
-test('decrementTime 07:00', function(t) {
-  t.plan(1);
-
-  var actual = util.decrementTime('07:00');
-  t.equal(actual, '06:45');
-});
-
-
-test('decrementTime 07:15', function(t) {
-  t.plan(1);
-
-  var actual = util.decrementTime('07:15');
-  t.equal(actual, '07:00');
-});
-
-
-test('decrementTime 07:30', function(t) {
-  t.plan(1);
-
-  var actual = util.decrementTime('07:30');
-  t.equal(actual, '07:15');
-});
-
-
-test('decrementTime 07:45', function(t) {
-  t.plan(1);
-
-  var actual = util.decrementTime('07:45');
-  t.equal(actual, '07:30');
-});
-
-
-test('decrementTime 08:00', function(t) {
-  t.plan(1);
-
-  var actual = util.decrementTime('08:00');
-  t.equal(actual, '07:45');
-});
